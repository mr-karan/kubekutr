workloads:
  - name: app
    deployments:
      - name: app
        replicas: 3
        labels:
          - name: 'service: app'
          - name: 'tier: frontend'
        containers:
          - name: app
            createService: true
            image: 'myapp:latest'
            envSecret: myapp
            ports:
            - name: app-port
              port: 3000
            command: '["./myapp"]'
            args: '["--config", "--hello"]'
            envVars:
              - name: hello
                value: iamsecret
            volumeMounts:
              - name: config-dir
                mountPath: /etc/config
                subPath: config.toml
        volumes:
          - name: config-dir
    services:
      - name: app
        type: NodePort
        headless: true
        ports:
          - name: app-port
            targetPort: 8000
            port: app-port
            protocol: UDP
          - name: cache-port
            targetPort: 7000
            port: 9000
        labels:
          - name: 'service: app'
        selectors:
          - name: 'tier: frontend'
    ingresses:
      - name: app
        annotations:
          - name: 'alb.ingress.kubernetes.io/healthy-threshold-count: "2"'
        ingressPaths:
          - path: /503
            service: app
            port: use-annotation
  - name: second-app
    statefulsets:
      - name: db
        serviceName: db-headless
        labels:
          - name: 'service: postgres'
          - name: 'tier: db'
        containers:
          - name: postgres
            image: 'postgres:latest'
            envSecret: postgres
            portInt: 5432
            portName: db-port
            envVars:
              - name: POSTGRES_DB
                value: sample
            volumeMounts:
              - name: db-dir
                mount: /var/lib/postgres
            cpuLimits: 800m
            memoryLimits: 1500mi
            cpuRequests: 400m
            memoryRequests: 750mi
        volumes:
          - name: db-dir
